--
-- Copyright 2016, NICTA
--
-- This software may be distributed and modified according to the terms of
-- the GNU General Public License version 2. Note that NO WARRANTY is provided.
-- See "LICENSE_GPLv2.txt" for details.
--
-- @TAG(NICTA_GPL)
--

type A
type B
type C

type T  = #{a : #A, b : B, c : C}
type T' = #{a : A, b : B, c : C}

mkA : () -> A

foo : T -> #{b : B, c : C}
foo #{a, b, c} = #{b, c}

-- This is for testing generating different types for 
--   unboxed and boxed abstract types
bar : T -> T'
bar #{a,b,c} = let a = mkA()
             in #{a, b, c} 

type R a b

baz : R A B -> R #A B

