--
-- Copyright 2016, NICTA
--
-- This software may be distributed and modified according to the terms of
-- the GNU General Public License version 2. Note that NO WARRANTY is provided.
-- See "LICENSE_GPLv2.txt" for details.
--
-- @TAG(NICTA_GPL)
--
@@# Heading 1
@@## Subheading 1.1
@ An abstract type
type T

@ A variant type with `three` _tags_, we can also refer to types like `T` and functions like `foo`.
type V = < TAG_a U8 | TAG_b U32 | TAG_c T >

@ A function to test pattern matching *facilities*. 
yyy : (V! @ a banged V argument
      , U32 @ *also able to use markdown* 
      ) -> < Fail (U32, (<TAG_a U8 | TAG_b U32 | TAG_c T > take TAG_b)!)  @ we failed :(
           | Success U32 @ we succeeded `yay`
           >
yyy (v, y) =
   v
   | TAG_b vb -> Success vb
   | vc -> Fail (42, vc)

@@# Heading 2

@@## Subheading 21
@@ This here is a standalone documentation block
@@
@@ Separate from the documentation for types like `V` or functions like `xxx`

@ Documentation for this function is separate from the block.
@
@ It can span multiple lines
xxx : (V!, U32) -> < Fail (U32, T!) | Success U32 >
xxx (v, y) =
   v
   | TAG_b vb -> Success vb
   | TAG_c vc -> Fail (42, vc)
   | TAG_a yyy -> Success (upcast yyy)

foo : < TAG_a U8 >! -> < Success U8 >
foo v =
   v
   | TAG_a va -> Success va

@@# Heading 3

@@## Subheading 31

bar : < TAG_a U8 | TAG_b U16 | TAG_c U32 >! -> < Fail (U32, (< TAG_a U8 | TAG_b U16 | TAG_c U32 > take TAG_a)!) 
                                               | Success (U8) >
bar v =
   v
   | TAG_a va -> Success va
   | d -> Fail (42, d)

@@## Subheading 32
