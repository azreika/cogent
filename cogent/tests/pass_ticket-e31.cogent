type OstoreState

type Obj

type R a b = <Success a | Error b>
type RR c a b = (c, R a b)

type BufOffs = U32
deep_freeObj: Obj -> ()
get_Obj : () -> Obj

type ObjAddr
index_get_addr : () -> ObjAddr

success : all (a, b). a -> R a b
success a = Success a

ostore_read: OstoreState -> RR OstoreState Obj ()
ostore_read ostore_st =
  let addr = index_get_addr ()
  and (ostore_st, r) = 
     let obj = get_Obj ()
      in (ostore_st, success obj)
  in r
  | Success obj -> let _ = deep_freeObj obj in (ostore_st, Error)
  | Error -> (ostore_st, Error)

