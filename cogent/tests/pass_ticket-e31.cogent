type Buffer
type OstoreState = { rbuf : Buffer }

type Obj

type RR c a b = (c, <Success a | Error b>)

deep_freeObj: Obj -> ()
deserialise_Obj: () -> Obj

ostore_read: OstoreState -> RR OstoreState Obj ()
ostore_read ostore_st =
  let (ostore_st, r) = 
     let obj = deserialise_Obj ()
      in (ostore_st, Success obj)
  in r
  | Success obj -> let _ = deep_freeObj obj in (ostore_st, Error)
  | Error -> (ostore_st, Error)

